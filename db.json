{
  "folders": [
    {
      "name": "Javascript",
      "parentId": null,
      "isOpen": false,
      "isSystem": false,
      "defaultLanguage": "javascript",
      "id": "rwAlAVnJ",
      "createdAt": 1659622384559,
      "updatedAt": 1659622797885,
      "index": 1
    },
    {
      "name": "Config",
      "parentId": null,
      "isOpen": false,
      "isSystem": false,
      "defaultLanguage": "json",
      "id": "DthZ1oFz",
      "createdAt": 1659623429815,
      "updatedAt": 1659623678713,
      "index": 2
    }
  ],
  "snippets": [
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "rwAlAVnJ",
      "tagsIds": [],
      "description": null,
      "name": "构造树形结构数据",
      "content": [
        {
          "label": "Fragment 1",
          "value": "/**\n * 构造树型结构数据\n * @param {*} data 数据源\n * @param {*} id id字段 默认 'id'\n * @param {*} parentId 父节点字段 默认 'parentId'\n * @param {*} children 孩子节点字段 默认 'children'\n */\nexport function handleTree(data, id, parentId, children) {\n\tlet config = {\n\t\tid: id || 'id',\n\t\tparentId: parentId || 'parentId',\n\t\tchildrenList: children || 'children'\n\t}\n\n\tvar childrenListMap = {}\n\tvar nodeIds = {}\n\tvar tree = []\n\n\tfor (let d of data) {\n\t\tlet parentId = d[config.parentId]\n\t\tif (childrenListMap[parentId] == null) {\n\t\t\tchildrenListMap[parentId] = []\n\t\t}\n\t\tnodeIds[d[config.id]] = d\n\t\tchildrenListMap[parentId].push(d)\n\t}\n\n\tfor (let d of data) {\n\t\tlet parentId = d[config.parentId]\n\t\tif (nodeIds[parentId] == null) {\n\t\t\ttree.push(d)\n\t\t}\n\t}\n\n\tfor (let t of tree) {\n\t\tadaptToChildrenList(t)\n\t}\n\n\tfunction adaptToChildrenList(o) {\n\t\tif (childrenListMap[o[config.id]] !== null) {\n\t\t\to[config.childrenList] = childrenListMap[o[config.id]]\n\t\t}\n\t\tif (o[config.childrenList]) {\n\t\t\tfor (let c of o[config.childrenList]) {\n\t\t\t\tadaptToChildrenList(c)\n\t\t\t}\n\t\t}\n\t}\n\treturn tree\n}\n",
          "language": "javascript"
        }
      ],
      "id": "n2wkuQw0",
      "createdAt": 1659622354519,
      "updatedAt": 1659622590975
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "rwAlAVnJ",
      "tagsIds": [],
      "description": null,
      "content": [
        {
          "label": "Fragment 1",
          "value": "/**\n * 格式化时间\n * @param {Date} time\n * @param {String} format\n */\nexport function dateFormat(time, format) {\n\tconst t = new Date(time)\n\tconst tf = function(i) {\n\t\treturn (i < 10 ? '0' : '') + i\n\t}\n\treturn format.replace(/yyyy|MM|dd|HH|mm|ss/g, function(a) {\n\t\tswitch (a) {\n\t\t\tcase 'yyyy':\n\t\t\t\treturn tf(t.getFullYear())\n\t\t\t\tbreak\n\t\t\tcase 'MM':\n\t\t\t\treturn tf(t.getMonth() + 1)\n\t\t\t\tbreak\n\t\t\tcase 'mm':\n\t\t\t\treturn tf(t.getMinutes())\n\t\t\t\tbreak\n\t\t\tcase 'dd':\n\t\t\t\treturn tf(t.getDate())\n\t\t\t\tbreak\n\t\t\tcase 'HH':\n\t\t\t\treturn tf(t.getHours())\n\t\t\t\tbreak\n\t\t\tcase 'ss':\n\t\t\t\treturn tf(t.getSeconds())\n\t\t\t\tbreak\n\t\t}\n\t})\n}",
          "language": "javascript"
        }
      ],
      "id": "7GxEv1xZ",
      "createdAt": 1659622765896,
      "updatedAt": 1659623469176,
      "name": "格式化时间"
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "rwAlAVnJ",
      "tagsIds": [],
      "description": null,
      "name": "获取URL参数",
      "content": [
        {
          "label": "Fragment 1",
          "value": "/**\n * @param {string} url\n * @returns {Object}\n */\nexport function getQueryObject(url) {\n  url = url == null ? window.location.href : url\n  const search = url.substring(url.lastIndexOf('?') + 1)\n  const obj = {}\n  const reg = /([^?&=]+)=([^?&=]*)/g\n  search.replace(reg, (rs, $1, $2) => {\n    const name = decodeURIComponent($1)\n    let val = decodeURIComponent($2)\n    val = String(val)\n    obj[name] = val\n    return rs\n  })\n  return obj\n}",
          "language": "javascript"
        }
      ],
      "id": "_L7njw3U",
      "createdAt": 1659622971249,
      "updatedAt": 1659623667348
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "rwAlAVnJ",
      "tagsIds": [],
      "description": null,
      "name": "深拷贝",
      "content": [
        {
          "label": "Fragment 1",
          "value": "/**\n * This is just a simple version of deep copy\n * Has a lot of edge cases bug\n * If you want to use a perfect deep copy, use lodash's _.cloneDeep\n * @param {Object} source\n * @returns {Object}\n */\nexport function deepClone(source) {\n  if (!source && typeof source !== 'object') {\n    throw new Error('error arguments', 'deepClone')\n  }\n  const targetObj = source.constructor === Array ? [] : {}\n  Object.keys(source).forEach(keys => {\n    if (source[keys] && typeof source[keys] === 'object') {\n      targetObj[keys] = deepClone(source[keys])\n    } else {\n      targetObj[keys] = source[keys]\n    }\n  })\n  return targetObj\n}",
          "language": "javascript"
        }
      ],
      "id": "GH9M8ZkY",
      "createdAt": 1659623046488,
      "updatedAt": 1659623667337
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "rwAlAVnJ",
      "tagsIds": [],
      "description": null,
      "name": "首字母大写",
      "content": [
        {
          "label": "Fragment 1",
          "value": "export function titleCase(str) {\n  return str.replace(/( |^)[a-z]/g, L => L.toUpperCase())\n}",
          "language": "javascript"
        }
      ],
      "id": "ss3wt8jL",
      "createdAt": 1659623138311,
      "updatedAt": 1659623667328
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "rwAlAVnJ",
      "tagsIds": [],
      "description": null,
      "name": "下划转驼峰",
      "content": [
        {
          "label": "Fragment 1",
          "value": "export function camelCase(str) {\n  return str.replace(/-[a-z]/g, str1 => str1.substr(-1).toUpperCase())\n}",
          "language": "javascript"
        }
      ],
      "id": "FJbyJFg2",
      "createdAt": 1659623170061,
      "updatedAt": 1659623667301
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "rwAlAVnJ",
      "tagsIds": [],
      "description": null,
      "name": "打印dom节点(vue)",
      "content": [
        {
          "label": "Fragment 1",
          "value": "const Print = function (dom, options) {\n    if (!(this instanceof Print)) return new Print(dom, options);\n  \n    this.options = this.extend({\n      'noPrint': '.no-print'\n    }, options);\n  \n    if ((typeof dom) === \"string\") {\n      this.dom = document.querySelector(dom);\n    } else {\n      this.isDOM(dom)\n      this.dom = this.isDOM(dom) ? dom : dom.$el;\n    }\n  \n    this.init();\n  };\n  Print.prototype = {\n    init: function () {\n      var content = this.getStyle() + this.getHtml();\n      this.writeIframe(content);\n    },\n    extend: function (obj, obj2) {\n      for (var k in obj2) {\n        obj[k] = obj2[k];\n      }\n      return obj;\n    },\n  \n    getStyle: function () {\n      var str = \"\",\n        styles = document.querySelectorAll('style,link');\n      for (var i = 0; i < styles.length; i++) {\n        str += styles[i].outerHTML;\n      }\n      str += \"<style>\" + (this.options.noPrint ? this.options.noPrint : '.no-print') + \"{display:none;}</style>\";\n  \n      return str;\n    },\n  \n    getHtml: function () {\n      var inputs = document.querySelectorAll('input');\n      var textareas = document.querySelectorAll('textarea');\n      var selects = document.querySelectorAll('select');\n  \n      for (var k = 0; k < inputs.length; k++) {\n        if (inputs[k].type == \"checkbox\" || inputs[k].type == \"radio\") {\n          if (inputs[k].checked == true) {\n            inputs[k].setAttribute('checked', \"checked\")\n          } else {\n            inputs[k].removeAttribute('checked')\n          }\n        } else if (inputs[k].type == \"text\") {\n          inputs[k].setAttribute('value', inputs[k].value)\n        } else {\n          inputs[k].setAttribute('value', inputs[k].value)\n        }\n      }\n  \n      for (var k2 = 0; k2 < textareas.length; k2++) {\n        if (textareas[k2].type == 'textarea') {\n          textareas[k2].innerHTML = textareas[k2].value\n        }\n      }\n  \n      for (var k3 = 0; k3 < selects.length; k3++) {\n        if (selects[k3].type == 'select-one') {\n          var child = selects[k3].children;\n          for (var i in child) {\n            if (child[i].tagName == 'OPTION') {\n              if (child[i].selected == true) {\n                child[i].setAttribute('selected', \"selected\")\n              } else {\n                child[i].removeAttribute('selected')\n              }\n            }\n          }\n        }\n      }\n      // 包裹要打印的元素\n      // fix: https://github.com/xyl66/vuePlugs_printjs/issues/36\n      let outerHTML = this.wrapperRefDom(this.dom).outerHTML\n      return outerHTML;\n    },\n    // 向父级元素循环，包裹当前需要打印的元素\n    // 防止根级别开头的 css 选择器不生效\n    wrapperRefDom: function (refDom) {\n      let prevDom = null\n      let currDom = refDom\n      // 判断当前元素是否在 body 中，不在文档中则直接返回该节点\n      if (!this.isInBody(currDom)) return currDom\n  \n      while (currDom) {\n        if (prevDom) {\n          let element = currDom.cloneNode(false)\n          element.appendChild(prevDom)\n          prevDom = element\n        } else {\n          prevDom = currDom.cloneNode(true)\n        }\n  \n        currDom = currDom.parentElement\n      }\n  \n      return prevDom\n    },\n  \n    writeIframe: function (content) {\n      var w, doc, iframe = document.createElement('iframe'),\n        f = document.body.appendChild(iframe);\n      iframe.id = \"myIframe\";\n      //iframe.style = \"position:absolute;width:0;height:0;top:-10px;left:-10px;\";\n      iframe.setAttribute('style', 'position:absolute;width:0;height:0;top:-10px;left:-10px;');\n      w = f.contentWindow || f.contentDocument;\n      doc = f.contentDocument || f.contentWindow.document;\n      doc.open();\n      doc.write(content);\n      doc.close();\n      var _this = this\n      iframe.onload = function(){\n        _this.toPrint(w);\n        setTimeout(function () {\n          document.body.removeChild(iframe)\n        }, 100)\n      }\n    },\n  \n    toPrint: function (frameWindow) {\n      try {\n        setTimeout(function () {\n          frameWindow.focus();\n          try {\n            if (!frameWindow.document.execCommand('print', false, null)) {\n              frameWindow.print();\n            }\n          } catch (e) {\n            frameWindow.print();\n          }\n          frameWindow.close();\n        }, 10);\n      } catch (err) {\n        console.log('err', err);\n      }\n    },\n    // 检查一个元素是否是 body 元素的后代元素且非 body 元素本身\n    isInBody: function (node) {\n      return (node === document.body) ? false : document.body.contains(node);\n    },\n    isDOM: (typeof HTMLElement === 'object') ?\n      function (obj) {\n        return obj instanceof HTMLElement;\n      } :\n      function (obj) {\n        return obj && typeof obj === 'object' && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n      }\n  };\n  const MyPlugin = {}\n  MyPlugin.install = function (Vue, options) {\n    // 4. 添加实例方法\n    Vue.prototype.$print = Print\n  }\n  export default MyPlugin",
          "language": "javascript"
        }
      ],
      "id": "0JxgeVVj",
      "createdAt": 1659623239262,
      "updatedAt": 1659623667313
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "rwAlAVnJ",
      "tagsIds": [],
      "description": null,
      "name": "解析Blob响应内容并下载",
      "content": [
        {
          "label": "Fragment 1",
          "value": "/**\n * 解析blob响应内容并下载\n * @param {*} res blob响应内容\n * @param {String} mimeType MIME类型\n */\nexport function resolveBlob(res, mimeType) {\n  const aLink = document.createElement('a')\n  var blob = new Blob([res.data], { type: mimeType })\n  // //从response的headers中获取filename, 后端response.setHeader(\"Content-disposition\", \"attachment; filename=xxxx.docx\") 设置的文件名;\n  var patt = new RegExp('filename=([^;]+\\\\.[^\\\\.;]+);*')\n  var contentDisposition = decodeURI(res.headers['content-disposition'])\n  var result = patt.exec(contentDisposition)\n  var fileName = result[1]\n  fileName = fileName.replace(/\\\"/g, '')\n  aLink.href = URL.createObjectURL(blob)\n  aLink.setAttribute('download', fileName) // 设置下载文件名称\n  document.body.appendChild(aLink)\n  aLink.click()\n  document.body.removeChild(aLink);\n}\n",
          "language": "javascript"
        }
      ],
      "id": "UC0BkOjW",
      "createdAt": 1659623303111,
      "updatedAt": 1659623667291
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "DthZ1oFz",
      "tagsIds": [],
      "description": null,
      "name": "Stylelint Config",
      "content": [
        {
          "label": "Fragment 1",
          "value": "module.exports = {\n  // extends: [\"stylelint-config-standard-scss\", \"stylelint-config-prettier\"],\n  rules: {\n    \"block-no-empty\": true,\n    \"color-no-invalid-hex\": true,\n    \"comment-no-empty\": true,\n    \"declaration-block-no-duplicate-properties\": [\n      true,\n      {\n        \"ignore\": [\n          \"consecutive-duplicates-with-different-values\"\n        ]\n      }\n    ],\n    \"declaration-block-no-shorthand-property-overrides\": true,\n    \"font-family-no-duplicate-names\": true,\n    \"font-family-no-missing-generic-family-keyword\": true,\n    \"function-calc-no-invalid\": true,\n    \"function-calc-no-unspaced-operator\": true,\n    \"function-linear-gradient-no-nonstandard-direction\": true,\n    \"keyframe-declaration-no-important\": true,\n    \"media-feature-name-no-unknown\": true,\n    \"no-duplicate-at-import-rules\": true,\n    \"no-duplicate-selectors\": true,\n    \"no-empty-source\": true,\n    \"no-extra-semicolons\": true,\n    \"no-invalid-double-slash-comments\": true,\n    \"selector-pseudo-element-no-unknown\": true,\n    \"selector-type-no-unknown\": true,\n    \"string-no-newline\": true,\n    \"unit-no-unknown\": true,\n    \"at-rule-empty-line-before\": [\n      \"always\",\n      {\n        \"except\": [\n          \"blockless-after-same-name-blockless\",\n          \"first-nested\"\n        ],\n        \"ignore\": [\n          \"after-comment\"\n        ]\n      }\n    ],\n    \"at-rule-name-case\": \"lower\",\n    \"at-rule-name-space-after\": \"always-single-line\",\n    \"at-rule-semicolon-newline-after\": \"always\",\n    \"block-closing-brace-empty-line-before\": \"never\",\n    \"block-closing-brace-newline-after\": \"always\",\n    \"block-closing-brace-newline-before\": \"always-multi-line\",\n    \"block-closing-brace-space-before\": \"always-single-line\",\n    \"block-opening-brace-newline-after\": \"always-multi-line\",\n    \"block-opening-brace-space-after\": \"always-single-line\",\n    \"block-opening-brace-space-before\": \"always\",\n    \"color-hex-case\": \"lower\",\n    \"color-hex-length\": \"short\",\n    \"comment-empty-line-before\": [\n      \"always\",\n      {\n        \"except\": [\n          \"first-nested\"\n        ],\n        \"ignore\": [\n          \"stylelint-commands\"\n        ]\n      }\n    ],\n    \"comment-whitespace-inside\": \"always\",\n    \"custom-property-empty-line-before\": [\n      \"always\",\n      {\n        \"except\": [\n          \"after-custom-property\",\n          \"first-nested\"\n        ],\n        \"ignore\": [\n          \"after-comment\",\n          \"inside-single-line-block\"\n        ]\n      }\n    ],\n    \"declaration-bang-space-after\": \"never\",\n    \"declaration-bang-space-before\": \"always\",\n    \"declaration-block-semicolon-newline-after\": \"always-multi-line\",\n    \"declaration-block-semicolon-space-after\": \"always-single-line\",\n    \"declaration-block-semicolon-space-before\": \"never\",\n    \"declaration-block-single-line-max-declarations\": 1,\n    \"declaration-block-trailing-semicolon\": \"always\",\n    \"declaration-colon-newline-after\": \"always-multi-line\",\n    \"declaration-colon-space-after\": \"always-single-line\",\n    \"declaration-colon-space-before\": \"never\",\n    \"declaration-empty-line-before\": [\n      \"always\",\n      {\n        \"except\": [\n          \"after-declaration\",\n          \"first-nested\"\n        ],\n        \"ignore\": [\n          \"after-comment\",\n          \"inside-single-line-block\"\n        ]\n      }\n    ],\n    \"function-comma-newline-after\": \"always-multi-line\",\n    \"function-comma-space-after\": \"always-single-line\",\n    \"function-comma-space-before\": \"never\",\n    \"function-max-empty-lines\": 0,\n    \"function-name-case\": \"lower\",\n    \"function-parentheses-newline-inside\": \"always-multi-line\",\n    \"function-parentheses-space-inside\": \"never-single-line\",\n    \"function-whitespace-after\": \"always\",\n    \"indentation\": 2,\n    \"length-zero-no-unit\": true,\n    \"max-empty-lines\": 1,\n    \"media-feature-colon-space-after\": \"always\",\n    \"media-feature-colon-space-before\": \"never\",\n    \"media-feature-name-case\": \"lower\",\n    \"media-feature-parentheses-space-inside\": \"never\",\n    \"media-feature-range-operator-space-after\": \"always\",\n    \"media-feature-range-operator-space-before\": \"always\",\n    \"media-query-list-comma-newline-after\": \"always-multi-line\",\n    \"media-query-list-comma-space-after\": \"always-single-line\",\n    \"media-query-list-comma-space-before\": \"never\",\n    \"no-eol-whitespace\": true,\n    \"no-missing-end-of-source-newline\": true,\n    \"number-leading-zero\": \"always\",\n    \"number-no-trailing-zeros\": true,\n    \"rule-empty-line-before\": [\n      \"always-multi-line\",\n      {\n        \"except\": [\n          \"first-nested\"\n        ],\n        \"ignore\": [\n          \"after-comment\"\n        ]\n      }\n    ],\n    \"selector-attribute-brackets-space-inside\": \"never\",\n    \"selector-attribute-operator-space-after\": \"never\",\n    \"selector-attribute-operator-space-before\": \"never\",\n    \"selector-combinator-space-after\": \"always\",\n    \"selector-combinator-space-before\": \"always\",\n    \"selector-descendant-combinator-no-non-space\": true,\n    \"selector-list-comma-newline-after\": \"always\",\n    \"selector-list-comma-space-before\": \"never\",\n    \"selector-max-empty-lines\": 0,\n    \"selector-pseudo-class-case\": \"lower\",\n    \"selector-pseudo-class-parentheses-space-inside\": \"never\",\n    \"selector-pseudo-element-case\": \"lower\",\n    \"selector-pseudo-element-colon-notation\": \"single\",\n    \"selector-type-case\": \"lower\",\n    \"unit-case\": \"lower\",\n    \"value-list-comma-newline-after\": \"always-multi-line\",\n    \"value-list-comma-space-after\": \"always-single-line\",\n    \"value-list-comma-space-before\": \"never\",\n    \"value-list-max-empty-lines\": 0\n  }\n}\n",
          "language": "javascript"
        }
      ],
      "id": "rAg9UbLK",
      "createdAt": 1659623344710,
      "updatedAt": 1659623628961
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "DthZ1oFz",
      "tagsIds": [],
      "description": null,
      "name": "Path Intellisense Config",
      "content": [
        {
          "label": "Fragment 1",
          "value": "{\n  \"compilerOptions\": {\n    \"target\": \"esnext\",\n    \"module\": \"commonjs\",\n    \"allowSyntheticDefaultImports\": true,\n    \"baseUrl\": \"./\",\n    \"paths\": {\n      \"@/*\": [\n        \"src/*\",\n      ],\n    },\n  },\n}\n",
          "language": "json"
        }
      ],
      "id": "po1vjY09",
      "createdAt": 1659623406965,
      "updatedAt": 1659623467012
    }
  ],
  "tags": []
}